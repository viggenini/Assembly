Inport	EQU	$FC
Utport	EQU	$FB
DelayC1	EQU	$5		;Dessa konstanter styr hur lång fördröjning Delay1s orsakar.
DelayC2	EQU	$2		;Ändra dem eventuellt i labbet så att fördröjnigen blir rimligt lång.


	ORG	$FF
	FCB	$20

	ORG	$20

Main	LDSP	#$20
	CLR	Utport
	
	
	JSR	ReadAscii
	SUBA	#$41
	CMPA	#26
	BHS	errorLoop
	LSLA
	PSHA	
	LDX	#MorseCode
	LDA	A,X
	STA	Count
	PULA
	INCA
	LDA	A,X

L3	LDY	Count
	BEQ	Main
	JSR	BlinkLight
	LSLA	
	DEC	Count
	JMP	L3
	



errorLoop:
	COM	Utport
	CLR	Utport
	JMP	errorLoop
	
	

ReadAscii:
L1	LDA	$FC
	BITA	#%00000001
	BNE	L1

L2	LDA	$FC
	BITA	#%00000001
	BEQ	L2

	LSRA
	RTS





	
BlinkLight:
	PSHA
	COM	Utport
	BITA	#%10000000

	BEQ	L2_Blink
	JSR	Delay1s
	JSR	Delay1s
	JSR	Delay1s
L2_Blink
	JSR	Delay1s
	CLR	Utport
	JSR	Delay1s
	PULA
	RTS

	
	
; Orsakar en fördröjning på ungefär 1s i simulatorn (vid snabb exekveringshastighet)
; Ändrar inga register
Delay1s:
	PSHA
	PSHX
	PSHC
	LDX	#DelayC2
Delay1s_loop2:
	LDA	#DelayC1
Delay1s_loop:
	DECA
	BNE	Delay1s_loop
	LEAX	-1,X
	CMPX	#0
	BNE	Delay1s_loop2
	PULC
	PULX
	PULA
	RTS

; Data - Variabler
Count:
	RMB	1

; Data - Konstanter
MorseCode:
	FCB	2,%01000000 ;'A'
	FCB	4,%10000000 ;'B'
	FCB	4,%10100000 ;'C'
	FCB	3,%10000000 ;'D'
	FCB	1,%00000000 ;'E'
	FCB	4,%00100000 ;'F'
	FCB	3,%11000000 ;'G'
	FCB	4,%00000000 ;'H'
	FCB	2,%00000000 ;'I'
	FCB	4,%01110000 ;'J'
	FCB	3,%10100000 ;'K'
	FCB	4,%01000000 ;'L'
	FCB	2,%11000000 ;'M'
	FCB	2,%10000000 ;'N'
	FCB	3,%11100000 ;'O'
	FCB	4,%01100000 ;'P'
	FCB	4,%11010000 ;'Q'
	FCB	3,%01000000 ;'R'
	FCB	3,%00000000 ;'S'
	FCB	1,%10000000 ;'T'
	FCB	3,%00100000 ;'U'
	FCB	4,%00010000 ;'V'
	FCB	3,%01100000 ;'W'
	FCB	4,%10010000 ;'X'
	FCB	4,%10110000 ;'Y'
	FCB	4,%11000000 ;'Z'
	
	; Koden exekverar en gång, sedan fastnar den i en loop..
	
	
	
	
